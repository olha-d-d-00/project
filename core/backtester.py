import os
import pandas as pd
import vectorbt as vbt
import matplotlib.pyplot as plt
import plotly.io as pio

# –ù–∞–ª–∞—à—Ç—É—î–º–æ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤ —É PNG
pio.kaleido.scope.default_format = "png"

# –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º PNG –≥—Ä–∞—Ñ—ñ–∫—ñ–≤
save_png = True  # –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ True, —â–æ–± –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ PNG –≥—Ä–∞—Ñ—ñ–∫–∏

def run_backtest(df: pd.DataFrame, strategy_name: str):
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –º–µ—Ç—Ä–∏–∫ —ñ –≥—Ä–∞—Ñ—ñ–∫—ñ–≤
    metrics_dir = f"results/metrics"
    screenshots_dir = f"results/screenshots/{strategy_name}"
    os.makedirs(metrics_dir, exist_ok=True)
    os.makedirs(screenshots_dir, exist_ok=True)

    metrics = []

    # –ü—Ä–æ—Ö–æ–¥–∏–º–æ –ø–æ –∫–æ–∂–Ω—ñ–π —Ç–æ—Ä–≥–æ–≤—ñ–π –ø–∞—Ä—ñ
    for symbol in df["symbol"].unique():
        pair_df = df[df["symbol"] == symbol].copy()

        # –Ø–∫—â–æ –Ω–µ–º–∞—î —Å—Ç–æ–≤–ø—Ü—è price, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–∞—Ä—É
        if "price" not in pair_df.columns:
            print(f"‚ö†Ô∏è –°—Ç–æ–≤–ø–µ—Ü—å 'price' –≤—ñ–¥—Å—É—Ç–Ω—ñ–π –¥–ª—è –ø–∞—Ä–∏ {symbol}, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ...")
            continue

        # –Ø–∫—â–æ –Ω–µ–º–∞—î —Å–∏–≥–Ω–∞–ª—ñ–≤, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–∞—Ä—É
        if pair_df["signal"].abs().sum() == 0:
            continue

        print(f"üìà –û–±—Ä–æ–±–∫–∞ –ø–∞—Ä–∏: {symbol}")

        # –î–∞–Ω—ñ –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Å–∏–≥–Ω–∞–ª—ñ–≤
        price = pair_df["price"]
        signal = pair_df["signal"]
        entries = signal == 1  # –í—Ö—ñ–¥ –ø—Ä–∏ —Å–∏–≥–Ω–∞–ª—ñ 1 (–∫—É–ø–∏—Ç–∏)
        exits = signal == -1  # –í–∏—Ö—ñ–¥ –ø—Ä–∏ —Å–∏–≥–Ω–∞–ª—ñ -1 (–ø—Ä–æ–¥–∞—Ç–∏)

        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Ä—Ç—Ñ–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Å–∏–≥–Ω–∞–ª—ñ–≤
        pf = vbt.Portfolio.from_signals(
            close=price,
            entries=entries,
            exits=exits,
            fees=0.001,  # –ö–æ–º—ñ—Å—ñ—è
            slippage=0.001  # –°–ª—ñ–ø–µ–π–¥–∂
        )

        # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è
        stats = pf.stats()
        stats["symbol"] = symbol
        metrics.append(stats)

        # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≥—Ä–∞—Ñ—ñ–∫—ñ–≤ equity curve
        try:
            print(f"üñºÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≥—Ä–∞—Ñ—ñ–∫–∞ –¥–ª—è {symbol}...")

            # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞
            fig = pf.plot()

            if save_png:  # –Ø–∫—â–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è PNG —É–≤—ñ–º–∫–Ω–µ–Ω–æ
                # –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞ Plotly –≤ Matplotlib –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
                fig_matplotlib = fig.to_image(format="png")  # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –≤ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è

                with open(f"{screenshots_dir}/{symbol}.png", "wb") as f:
                    f.write(fig_matplotlib)  # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞ —è–∫ PNG
                print(f"‚úÖ –ì—Ä–∞—Ñ—ñ–∫ –¥–ª—è {symbol} –∑–±–µ—Ä–µ–∂–µ–Ω–æ!")
            else:
                print(f"üìÇ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞ –¥–ª—è {symbol} –≤–∏–º–∫–Ω–µ–Ω–æ.")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫ –¥–ª—è {symbol}: {e}")

    # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –º–µ—Ç—Ä–∏–∫ –¥–ª—è —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó
    if metrics:
        metrics_df = pd.DataFrame(metrics).set_index("symbol")
        metrics_path = f"{metrics_dir}/{strategy_name}_metrics.csv"
        metrics_df.to_csv(metrics_path)  # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –º–µ—Ç—Ä–∏–∫ —É CSV
        print(f"‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ –º–µ—Ç—Ä–∏–∫–∏ –≤ {metrics_path}")
    else:
        print("‚ö†Ô∏è –ù–µ–º–∞—î –º–µ—Ç—Ä–∏–∫ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è")